---
- hosts: cloudlab
  become: no

  tasks:
    - name: Print OS and distro Ansible variables collected by setup
      debug:
        msg:
          - "ansible_os_family: {{ ansible_os_family }}"
          - "ansible_distribution: {{ ansible_distribution }}"
          - "ansible_distribution_major_version: {{ ansible_distribution_major_version }}"
          - "ansible_distribution_version: {{ ansible_distribution_version }}"
          - "ansible_distribution_release: {{ ansible_distribution_release }}"

    # Necessary since {{ ansible_user }} generates a "Variable undefined error",
    # probably due to using an SSH config file instead of declaring everything directly
    # in the Ansible inventory.
    - name: Determine current user
      shell: whoami
      register: ssh_user

    - name: Add Docker apt signing keys
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg

    - name: Add Docker apt repo
      become: yes
      apt_repository:
        repo: deb [arch={{ arch_map[ansible_architecture] }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Update apt-get repo/cache
      become: yes
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Install packages
      become: yes
      apt:
        name:
          - ca-certificates
          - curl
          - docker-ce
          - docker-compose-plugin
          - git
          - gnome-terminal
          - gnupg
          - htop
          - lsb-release
          - python3
          - python3-pip
          - vim
        state: present

    - name: Modify current user
      become: yes
      user:
        name: "{{ ssh_user.stdout }}"
        shell: /bin/bash
        groups: docker
        append: yes

    - name: Bash shell config
      include_tasks: "tasks/bashrc.yml"

    - name: SSH config
      include_tasks: "tasks/sshconfig.yml"

    - name: Git config
      include_tasks: "tasks/gitconfig.yml"

    - name: Checking if repo already checked out
      stat:
        path: '$HOME/checkout'
      register: repo_checkout_path

    - name: Check out the GitHub repository
      when: not repo_checkout_path.stat.exists
      git:
        repo: "{{ github_repo_url }}"
        dest: "$HOME/checkout"
        depth: 0
        version: "{{ github_branch }}"
        force: yes
        update: yes
        accept_newhostkey: yes
